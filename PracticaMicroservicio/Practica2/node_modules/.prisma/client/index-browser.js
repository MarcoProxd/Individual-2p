
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.5.2
 * Query Engine version: aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a
 */
Prisma.prismaVersion = {
  client: "5.5.2",
  engine: "aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EventoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  fecha: 'fecha',
  hora: 'hora',
  lugar: 'lugar',
  tipoEventoId: 'tipoEventoId',
  responsableId: 'responsableId'
};

exports.Prisma.AsistenteScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  correo: 'correo',
  telefono: 'telefono',
  clienteId: 'clienteId',
  metodoPagoId: 'metodoPagoId'
};

exports.Prisma.PagoScalarFieldEnum = {
  id: 'id',
  monto: 'monto',
  fechaPago: 'fechaPago',
  metodoPagoId: 'metodoPagoId',
  eventoId: 'eventoId',
  clienteId: 'clienteId'
};

exports.Prisma.ServicioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  costo: 'costo',
  reservaId: 'reservaId',
  tipoServicioId: 'tipoServicioId'
};

exports.Prisma.ProveedorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  contacto: 'contacto',
  telefono: 'telefono',
  contratoId: 'contratoId',
  clienteId: 'clienteId'
};

exports.Prisma.TipoEventoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  precioBase: 'precioBase',
  aforoMaximo: 'aforoMaximo',
  duracion: 'duracion'
};

exports.Prisma.PersonaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  correo: 'correo',
  telefono: 'telefono',
  direccion: 'direccion',
  ciudad: 'ciudad',
  codigoPostal: 'codigoPostal',
  pais: 'pais'
};

exports.Prisma.MetodoPagoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  correo: 'correo',
  telefono: 'telefono',
  direccion: 'direccion',
  ciudad: 'ciudad',
  codigoPostal: 'codigoPostal',
  pais: 'pais'
};

exports.Prisma.ReservaScalarFieldEnum = {
  id: 'id',
  fechaReserva: 'fechaReserva',
  horaReserva: 'horaReserva',
  eventoId: 'eventoId',
  duracionReserva: 'duracionReserva'
};

exports.Prisma.TipoServicioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.ContratoScalarFieldEnum = {
  id: 'id',
  fechaInicio: 'fechaInicio',
  fechaFinalizacion: 'fechaFinalizacion',
  servicioId: 'servicioId',
  tipoContrato: 'tipoContrato',
  costoTotal: 'costoTotal'
};

exports.Prisma.CalificacionScalarFieldEnum = {
  id: 'id',
  puntuacion: 'puntuacion',
  comentarios: 'comentarios',
  eventoId: 'eventoId',
  fechaCalificacion: 'fechaCalificacion'
};

exports.Prisma.CalificacionProveedorScalarFieldEnum = {
  id: 'id',
  puntuacion: 'puntuacion',
  comentarios: 'comentarios',
  proveedorId: 'proveedorId',
  fechaCalificacion: 'fechaCalificacion'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Evento: 'Evento',
  Asistente: 'Asistente',
  Pago: 'Pago',
  Servicio: 'Servicio',
  Proveedor: 'Proveedor',
  TipoEvento: 'TipoEvento',
  Persona: 'Persona',
  MetodoPago: 'MetodoPago',
  Cliente: 'Cliente',
  Reserva: 'Reserva',
  TipoServicio: 'TipoServicio',
  Contrato: 'Contrato',
  Calificacion: 'Calificacion',
  CalificacionProveedor: 'CalificacionProveedor'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
